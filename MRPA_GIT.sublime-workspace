{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Delta",
				"Deltax2y2"
			],
			[
				"Del",
				"Deltaxy"
			],
			[
				"Field",
				"FieldType"
			],
			[
				"Comple",
				"ComplexMatrixType"
			],
			[
				"Matr",
				"MatrixType"
			],
			[
				"print",
				"printOccupation"
			],
			[
				"set_mom",
				"set_momenta_Path1"
			],
			[
				"kmes",
				"kmesh"
			],
			[
				"numb",
				"numberOfQ"
			],
			[
				"K1",
				"K1vec"
			],
			[
				"gk",
				"gk0wn"
			],
			[
				"nOrb",
				"nOrbAtom"
			],
			[
				"type",
				"typename"
			]
		]
	},
	"buffers":
	[
		{
			"file": "parameters.h",
			"settings":
			{
				"buffer_size": 25942,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "susceptibility.h",
			"settings":
			{
				"buffer_size": 21722,
				"line_ending": "Unix"
			}
		},
		{
			"file": "momentumDomain.h",
			"settings":
			{
				"buffer_size": 18836,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gaps3D.h",
			"settings":
			{
				"buffer_size": 30932,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 1955,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bandstructure.h",
			"settings":
			{
				"buffer_size": 17971,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 7650,
				"line_ending": "Unix"
			}
		},
		{
			"file": "TEST/5band1111_3D/input.dat",
			"settings":
			{
				"buffer_size": 1858,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bilayer.h",
			"settings":
			{
				"buffer_size": 3329,
				"line_ending": "Unix"
			}
		},
		{
			"file": "SrRuO.h",
			"settings":
			{
				"buffer_size": 2301,
				"line_ending": "Unix"
			}
		},
		{
			"file": "KFe2Se2.h",
			"settings":
			{
				"buffer_size": 7701,
				"line_ending": "Unix"
			}
		},
		{
			"file": "FourOrbital.h",
			"settings":
			{
				"buffer_size": 2246,
				"line_ending": "Unix"
			}
		},
		{
			"file": "4Orbital.h",
			"settings":
			{
				"buffer_size": 2268,
				"line_ending": "Unix"
			}
		},
		{
			"file": "BaFeAs_5orb.h",
			"settings":
			{
				"buffer_size": 7206,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ferminator.h",
			"settings":
			{
				"buffer_size": 30979,
				"line_ending": "Unix"
			}
		},
		{
			"file": "chi0.h",
			"settings":
			{
				"buffer_size": 23384,
				"line_ending": "Unix"
			}
		},
		{
			"file": "pairing.h",
			"settings":
			{
				"buffer_size": 21870,
				"line_ending": "Unix"
			}
		},
		{
			"file": "susInt.h",
			"settings":
			{
				"buffer_size": 2372,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CrystalHarmonics2D.h",
			"settings":
			{
				"buffer_size": 16836,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 286 files for \"FSpoints\"\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/ferminator.h:\n  873  \n  874  \tvoid writeKF() {\n  875: \t\tstd::ofstream os(\"FSpoints.txt\");\n  876  \t\tint width(8);\n  877  \t\tos.precision(width);\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/main.cpp:\n   91  \ttypedef bandstructure<FieldType,psimag::Matrix,ConcurrencyType> BandsType;\n   92  \tif (param.options.find(\"calcFS\")!=std::string::npos) {\n   93: \t\tferminator<FieldType,BandsType,psimag::Matrix,ConcurrencyType> FSpoints(param,concurrency,1);\n   94  \t}\n   95  \n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/mrpapp:\n    <binary>\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/mrpapp_stripped:\n    <binary>\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/pairing.h:\n   98  \t\tstd::vector<SuscType> chiStore;\n   99  \t\tstd::vector<VectorType> qStore;\n  100: \t\tferminator<FieldType,BandsType,MatrixTemplate,ConcurrencyType> FSpoints;\n  101  \t\tsize_t nkF;\n  102  \t\tMatrixType chikk;\n  ...\n  134  \t\t\tchiStore(0,SuscType(param,conc)),\n  135  \t\t\tqStore(0,VectorType(3)),\n  136: \t\t\tFSpoints(param,conc),\n  137: \t\t\tnkF(FSpoints.nTotal),\n  138  \t\t\tchikk(nkF,nkF)\n  139  \t\t{\t\t\t\n  140  \t\t\t// determineKF(file);\n  141  \n  142: \t\t\t// size_t nkF(FSpoints.nTotal);\n  143  \t\t\tnTotal = (nkF * nkF + nkF) / 2;\n  144  \t\t\t// nTotal = nkF * nkF;\n  ...\n  188  \t\t\t// We have (nkF^2+nkF)/2 total elements to calculate for Gamma\n  189  \t\t\t// size_t nTotal((nkF*nkF+nkF)/2);\n  190: \t\t\t// size_t nkF(FSpoints.nTotal);\n  191  \t\t\tstd::vector<size_t> indToi(nTotal);\n  192  \t\t\tstd::vector<size_t> indToj(nTotal);\n  ...\n  217  \t\t\t\t// if (ik1==0 && ik2==16) {\n  218  \n  219: \t\t\t\tk1[0] = FSpoints.kFx[ik1]; k1[1] = FSpoints.kFy[ik1]; k1[2] = FSpoints.kFz[ik1];\n  220: \t\t\t\tk2[0] = FSpoints.kFx[ik2]; k2[1] = FSpoints.kFy[ik2]; k2[2] = FSpoints.kFz[ik2];\n  221: \t\t\t\tsize_t band1(FSpoints.kFtoBand[ik1]);\n  222: \t\t\t\tsize_t band2(FSpoints.kFtoBand[ik2]); \n  223  \t\t\t\t// q = kF1-kF2\n  224  \t\t\t\tfor (int l=0;l<3;l++) q[l] = k1[l]-k2[l];\n  ...\n  481  \n  482  \t\tvoid calcNorm() {\n  483: \t\t\tsize_t nkF(FSpoints.nTotal);\n  484  \t\t\tfor (size_t ik=0; ik<nkF; ++ik) {\n  485  \t\t\t\tVectorType k(3,0);\n  ...\n  488  \t\t\t\t// FieldType vkF2 = bands.fermiVelocity2D(k,band);\n  489  \t\t\t\t// std::cout << k[0] << \" , \" << k[1] << \" , \" << band << \" , \" << vkF2 << \"\\n\";\n  490: \t\t\t\tnormalization[ik]=FSpoints.deltakF[ik]/(pow(2.*param.pi_f,dim)*FSpoints.vkF[ik]);\n  491  \t\t\t}\n  492  \t\t}\n  ...\n  495  \t\t\t// std::cout << \"kFx1,kFy1\" << kFx[0] << \",\" << kFy[0];\n  496  \t\t\t// First in a format suitable for reading into R using the script in gammapp_diag.R\n  497: \t\t\tsize_t nkF(FSpoints.nTotal);\n  498  \t\t\tstd::ofstream os(\"Gammakkp.txt\");\n  499  \t\t\tos << \"nkF:\\n\" << nkF << \"\\n\";\n  500: \t\t\tos << \"kFx:\\n\" << FSpoints.kFx << \"\\n\";\n  501: \t\t\tos << \"kFy:\\n\" << FSpoints.kFy << \"\\n\";\n  502: \t\t\tos << \"kFz:\\n\" << FSpoints.kFz << \"\\n\";\n  503  \t\t\tos << \"U,U',J,J':\\n\" << param.U << \" , \" << param.Up << \" , \" << param.J << \" , \" << param.Jp << \"\\n\\n\";\n  504  \t\t\tos << \"Gamma(k,k'): \\n\";\n  ...\n  521  \t\t\tos2 << \" \\\"kfPoints\\\": [\\n\";\n  522  \t\t\tfor (size_t ik=0;ik<nkF;ik++) {\n  523: \t\t\t\tos2 << \"[\" << FSpoints.kFx[ik] << \" ,\" << FSpoints.kFy[ik] << \" ,\" << FSpoints.kFz[ik] << \"] \";\n  524  \t\t\t\tif (ik<nkF-1) os2 << \",\";\n  525  \t\t\t}\n  ...\n  599  \t\tos2 << \" \\\"kfPoints\\\": [\\n\";\n  600  \t\tfor (size_t ik=0;ik<nkF;ik++) {\n  601: \t\t\tos2 << \"[\" << FSpoints.kFx[ik] << \" ,\" << FSpoints.kFy[ik] << \" ,\" << FSpoints.kFz[ik] << \"] \";\n  602  \t\t\tif (ik<nkF-1) os2 << \",\";\n  603  \t\t}\n  ...\n  634  \n  635  \t\tfor (size_t ik=0;ik<nkF;ik++) {\n  636: \t\t\tsize_t band(FSpoints.kFtoBand[ik]);\n  637  \t\t\tVectorType k(3,0);\n  638: \t\t\tk[0] = FSpoints.kFx[ik];\n  639: \t\t\tk[1] = FSpoints.kFy[ik];\n  640: \t\t\tk[2] = FSpoints.kFz[ik];\n  641  \n  642  \t\t\tComplexMatrixType ak(nOrb,nOrb);\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/susceptibility.h:\n  547  \n  548  \t\tvoid printGap3() {\n  549: \t\t\tferminator<FieldType,BandsType,psimag::Matrix,ConcurrencyType> FSpoints(param,conc,1);\n  550: \t\t\tsize_t nk(FSpoints.nTotal);\n  551  \t\t\tmomentumDomain<Field,psimag::Matrix,ConcurrencyType> kmesh(param,conc,param.nkInt,param.nkIntz,param.dimension);\n  552  \t\t\tBandsType bands(param,conc,kmesh,true);\n  ...\n  560  \t\t\tfor (size_t ik = 0; ik < nk; ++ik)\t{\n  561  \t\t\t\tVectorType k(3,0); size_t iband;\n  562: \t\t\t\tk[0] = FSpoints.kFx[ik];\n  563: \t\t\t\tk[1] = FSpoints.kFy[ik];\n  564: \t\t\t\tk[2] = FSpoints.kFz[ik];\n  565: \t\t\t\tiband = FSpoints.kFtoBand[ik];\n  566  \t\t\t\tbands.getEkAndAk(k,ek,ak);\n  567  \t\t\t\tComplexType gap1 = Delta(k,iband,ak);\n  ...\n  569  \t\t\t\tos << k[0] << \" , \" << k[1] << \" , \" << k[2] << \" , \" \n  570  \t\t\t\t\t   << iband;\n  571: \t\t\t\tfor (size_t iorb=0;iorb<param.nOrb;iorb++) os << \" , \" << FSpoints.weights[ik][iorb];\n  572  \t\t\t    os << \" , \" << real(gap1) << \"\\n\";\n  573  \t\t\t}\n\n41 matches across 6 files\n\n\nSearching 286 files for \"FSpoints.txt\"\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/ferminator.h:\n  873  \n  874  \tvoid writeKF() {\n  875: \t\tstd::ofstream os(\"FSpoints.txt\");\n  876  \t\tint width(8);\n  877  \t\tos.precision(width);\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/mrpapp:\n    <binary>\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/mrpapp_stripped:\n    <binary>\n\n3 matches across 3 files\n\n\nSearching 288 files for \"printGap\"\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/mrpapp:\n    <binary>\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/mrpapp_stripped:\n    <binary>\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/parameters.h:\n   34  \t\tField wmin,wmax;\n   35  \t\tsize_t scState;\n   36: \t\tsize_t printGap;\n   37  \t\tstd::string gAmpl;\n   38  \t\tField Delta0;\n   ..\n  131  \t\t\twmax(0.0),\n  132  \t\t\tscState(0),\n  133: \t\t\tprintGap(0),\n  134  \t\t\tgAmpl(\"LaOFeAs_s_1\"),\n  135  \t\t\tDelta0(0.04),\n  ...\n  347  \t\t        else if (text.find(\"wmax\")!=std::string::npos) str >> (*this).wmax; \t\t\t\t\n  348  \t\t        else if (text.find(\"scState\")!=std::string::npos) str >> (*this).scState; \t\t\t\t\n  349: \t\t        else if (text.find(\"printGap\")!=std::string::npos) str >> (*this).printGap; \t\t\t\t\n  350  \t\t        else if (text.find(\"gAmpl\")!=std::string::npos) str >> (*this).gAmpl; \t\t\t\t\n  351  \t\t        else if (text.find(\"Delta0\")!=std::string::npos) str >> (*this).Delta0; \t\t\t\t\n  ...\n  457  \t\t\t\tos << \"wmax = \" << (*this).wmax << \"\\n\";\n  458  \t\t\t\tos << \"scState = \" << (*this).scState << \"\\n\";\n  459: \t\t\t\tos << \"printGap = \" << (*this).printGap << \"\\n\";\n  460  \t\t\t\tos << \"gAmpl = \" << (*this).gAmpl << \"\\n\";\n  461  \t\t\t\tos << \"Delta0 = \" << (*this).Delta0 << \"\\n\";\n  ...\n  563  \t\t        conc.broadcast((*this).wmax); \t\t\t\t\n  564  \t\t        conc.broadcast((*this).scState); \t\t\t\t\n  565: \t\t        conc.broadcast((*this).printGap); \t\t\t\t\n  566  \t\t        conc.broadcast((*this).gAmpl); \t\t\t\t\n  567  \t\t        conc.broadcast((*this).Delta0); \t\t\t\t\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/susceptibility.h:\n   99  \t\t\t\t               wmin,wmax,QVec);\n  100  \n  101: \t\t\tif (param.scState==1 && param.printGap==1 && conc.rank()==0) {\n  102  \t\t\t\tif (conc.rank()==0) std::cout << \"Now writing gap.txt \\n\";\n  103: \t\t\t\tprintGap3();\n  104  \t\t\t\tif (conc.rank()==0) std::cout << \"Done writing gap.txt \\n\";\n  105  \t\t\t}\n  ...\n  481  \n  482  \n  483: \t\tvoid printGap(const std::string& file=\"gapRPA.txt\") {\n  484  \t\t\tVectorType data;\n  485  \t\t\tloadVector(data,file);\n  ...\n  521  \t\t}\n  522  \n  523: \t\tvoid printGap2() {\n  524  \t\t\tGapType Delta(param,conc);\n  525  \t\t\tmomentumDomain<Field,psimag::Matrix,ConcurrencyType> kmesh(param,conc,param.nkInt,param.nkIntz,param.dimension);\n  ...\n  546  \t\t}\n  547  \n  548: \t\tvoid printGap3() {\n  549  \t\t\tferminator<FieldType,BandsType,psimag::Matrix,ConcurrencyType> FSpoints(param,conc,1);\n  550  \t\t\tsize_t nk(FSpoints.nTotal);\n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/TEST/5band1111/input_1111.dat:\n   71  gAmpl             =    KFe2Se2_edoped_SO0p05_d\n   72  Delta0            =    0.00\n   73: printGap          =    0\n   74  \n   75  \n\n/Users/t7m/Dropbox/GIT_CODE/MRPAPP/TEST/5band1111_3D/input.dat:\n   80  gAmpl             =    KFe2Se2_edoped_SO0p05_d\n   81  Delta0            =    0.00\n   82: printGap          =    0\n   83  \n   84  \n\n19 matches across 6 files\n",
			"settings":
			{
				"buffer_size": 7935,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/LaTeXTools/LaTeX.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/LaTeXTools/LaTeX.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/R-Box/support/R-Box.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/R-Box/support/R-Box.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"git",
				"Git: Commit"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"gitp",
				"Git: Push"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"repl",
				"SublimeREPL: R"
			],
			[
				"R",
				"SublimeREPL: R"
			],
			[
				"replip",
				"SublimeREPL: Python - IPython"
			],
			[
				"late",
				"LaTeXTools: Reconfigure and migrate settings"
			]
		],
		"width": 529.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/t7m/Dropbox/GIT_CODE/MRPAPP",
		"/Users/t7m/Dropbox/GIT_CODE/MRPAPP/PythonScripts",
		"/Users/t7m/Dropbox/GIT_CODE/MRPAPP/TEST",
		"/Users/t7m/Dropbox/GIT_CODE/MRPAPP/TEST/5band1111"
	],
	"file_history":
	[
		"/Users/t7m/Dropbox/GIT_CODE/MRPAPP/TEST/5band1111/input_1111.dat",
		"/Users/t7m/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/t7m/Library/Caches/com.binarynights.ForkLift2/#0/Gammakkp.txt",
		"/Users/t7m/Dropbox/GIT_CODE/MRPAPP/PartialPsimag/Symmetry/SuperCrystalBuilder.h",
		"/Projects/Triangular_Hubbard/HalfFilling_t-1/OutputData/n0/b0[3]/Maxent.py",
		"/Users/t7m/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/t7m/Library/Application Support/Sublime Text 3/Packages/User/Send-selection.py",
		"/Users/t7m/Library/Application Support/Sublime Text 3/Packages/User/Send-Selection.py",
		"/Users/t7m/Dropbox/C++Code/TEST/BaFeAs/PlotFSAndChiAnd3DGap.R",
		"/Projects/Scripts/RGL_Plot_of_FS.R",
		"/Projects/ETH_Reps/symmetrize_Nc4x4.py",
		"/Users/t7m/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/t7m/Dropbox/C++Code/CrystalHarmonics.h",
		"/Users/t7m/Dropbox/C++Code/gap.h",
		"/Users/t7m/Downloads/BILAYER/BiLayer/Plot_Chi_PairField.R",
		"/Users/t7m/.matplotlib/matplotlibrc",
		"/Users/t7m/Library/Application Support/Sublime Text 3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/Users/t7m/Library/Application Support/Sublime Text 3/Packages/User/SublimeREPL.sublime-settings",
		"/Projects/PairInt2DHubbard/ANALYSIS/3DPlotsOfGammaPPAndChiOfQ/Test/LatticePlotWireframeAndCloudOfGamma.R",
		"/Projects/ETH_Reps/dca_ethz_Aug15/dca_ethz/src/phys_library/DCA+_algorithms/compute_band_structure/compute_band_structure.h",
		"/Projects/FRG_vs_DCA/whichQ_for_Nc32.py",
		"/Users/t7m/Dropbox/reducible_vertex/SC_Nc=32_U=2/prep_red_vertex.py",
		"/Users/t7m/Dropbox/reducible_vertex/SC_Nc=32_U=2/error.txt",
		"/Users/t7m/Dropbox/reducible_vertex/SC_Nc=32_U=4/input_G2.json",
		"/Users/t7m/Dropbox/reducible_vertex/SC_Nc=32_U=4/compute_eigenvalues.py",
		"/Users/t7m/Dropbox/reducible_vertex/SC_Nc=32_U=4/batch_script.slm",
		"/Users/t7m/Dropbox/DCA+_phi/DCA_coarsegrarining.tex",
		"/Users/t7m/Dropbox/DCA+_phi/refs.bib",
		"/Users/t7m/Dropbox/INCITE16/INCITE16_Renewal_Maier.tex",
		"/Users/t7m/Dropbox/INCITE16/INCITE16_Project_Plans_Maier.tex",
		"/Users/t7m/Dropbox/INCITE16/Project_Achievements_template.tex",
		"/Users/t7m/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/t7m/Downloads/data_d=0.90_Nc=12A_U=7_BSE_PARTICLE_PARTICLE_SUPERCONDUCTING_0_0_nwnRed.json",
		"/Users/t7m/Library/Application Support/Sublime Text 3/Packages/LaTeXTools/README.markdown",
		"/Users/t7m/Library/Application Support/Sublime Text 3/Packages/User/LaTeXTools.sublime-settings",
		"/Users/t7m/Dropbox/Jülich15/Maier_v4.tex"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"dwave",
			"dwave_2D_KFe2Se2_iso",
			"calcOnly",
			"calcOn",
			"kmap",
			"kMap",
			"printChi0k",
			"chikk.txt",
			"Omega0",
			"GapType",
			"printGap",
			"4Orbi",
			"ifdef",
			"FSpoints.txt",
			"FSpoints",
			"KFe2Se2",
			"l2",
			"l1",
			"dgInv",
			"shift",
			"shif",
			"Hk",
			"eigenvec",
			"eigenvects",
			" - param.mu",
			"param.mu",
			"BaFe",
			"4,5",
			"3,5",
			"3,4",
			"1,5",
			"2,5",
			"1,5",
			"1,4",
			"2,4",
			"1,4",
			"1,3",
			"1,2",
			"5,5",
			"4,4",
			"1",
			"character",
			"directions",
			"symmetry",
			"ifdef",
			"ifdev",
			"dwave",
			"Gammakkp.jsn",
			"calcChiNematicRPA",
			"chargeFactor",
			"charge",
			"calcFS",
			"susOfQFull",
			"printGap",
			"Omega",
			"damp",
			"do_DCA",
			"compute_G_K_w",
			"perform_cluster_mapping_Greens_function",
			"perform_cluster_mapping",
			"particleholemagnetic",
			"TaskSetter",
			"PHM",
			"require(misc3d)\nrequire(rgl)\nopen3d()\nread.table(\"ek.dat\", header = F) -> b\nnlevels(factor(b$V3)) -> nkz\nsqrt(length(b$V1)/nkz) -> nk\nlength(b)-3 -> nbands\ncol=c(\"red\",\"blue\",\"green\",\"orange\",\"yellow\",\"brown\",\"purple\",\"grey\",\"pink\",\"beige\")\nadd <- F\nfor (i in 4:(nbands+3)) {\n\tFS <- range(b[,i])[1]*range(b[,i])[2]\n\tif (FS < 0) {\n\t\tcontour3d(array(b[,i],dim=c(nk,nk,nkz)),level=0,color=col[i-3],aspect=c(1,10),frames=T,perspective=T,distance=2,smooth=T,lwd=2,add=add,ticktype=\"\")\n\t\tadd <- T\n\t}\n}\naspect3d(1,1,1.44592)\n# axes3d(edges = \"bbox\",labels=FALSE,tick=FALSE)\n# box3d()\nmy.ticks=c(1,16,32)\naxis3d('x',at=my.ticks,labels=c(-1,0,1))\naxis3d('y',at=my.ticks,labels=c(-1,0,1))\naxis3d('z',at=my.ticks,labels=c(-1,0,1))\n",
			"writer",
			"G4_k_k_w_w",
			"get_G4",
			"G4",
			"accumulator_nonlocal_chi_obj",
			"accumulator_nonlocal_chi",
			"G4",
			"accumulate_particle_particle_superconducting",
			"G4_k_k_w_w",
			"accumulator_nonlocal_chi_obj",
			"accumulator_nonlocal_chi",
			"iK2Map",
			"\\bm",
			"br",
			"wrap",
			"8093",
			"chiRPA",
			"Gap not implement",
			"dwave",
			"gap",
			"crystHarm",
			"crystHarm2",
			"gampl",
			"dwave",
			"damp",
			"susInt",
			"chiRPA.txt",
			"param.gampl",
			"font",
			"plot",
			"color",
			"axes",
			"xlabel",
			"pad",
			"interpolate",
			"uj",
			"ujson",
			"M_r_w_squared",
			"perform_cluster_mapping_Greens_function",
			"perform_Cluster",
			"compute_G_K_w",
			"perform_cluster_mapping_Greens_function",
			"perform_cluster_mapping",
			"compute_G0_K_w_cluster_excluded",
			"perform_cluster_exclusion_step",
			"cluster_exclusion",
			"compute_G0_K_t",
			"compute_G_q_t",
			"compute_G0_K_t",
			",\n",
			"initialize_G0",
			"compute_G0_K_t",
			"compute_G0_K_w_cluster_excluded",
			"perform_cluster_exclusion_step",
			"G0_K",
			"initialize",
			"Monte_Carlo_Integrator_type",
			"MonteCarloIntegrator",
			"solve_cluster_problem",
			"initialize",
			"dca_object",
			"initialize_G0",
			"start coarsegraining G0_k_w",
			"quadrature_integration_G_q_t_st"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"3,3",
			"0"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "parameters.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25942,
						"regions":
						{
						},
						"selection":
						[
							[
								20210,
								20223
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "c++",
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7742.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "susceptibility.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21722,
						"regions":
						{
						},
						"selection":
						[
							[
								4978,
								4978
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "c++",
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1856.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "momentumDomain.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18836,
						"regions":
						{
						},
						"selection":
						[
							[
								6163,
								6163
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3513.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "gaps3D.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30932,
						"regions":
						{
						},
						"selection":
						[
							[
								3952,
								4003
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCount":
							{
								"changes": -1,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"WordCountSyntax": "c++",
							"bh_regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4127,
										4128
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										3809,
										3810
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 484.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1955,
						"regions":
						{
						},
						"selection":
						[
							[
								1202,
								1202
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "bandstructure.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17971,
						"regions":
						{
						},
						"selection":
						[
							[
								6950,
								6950
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2950.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7650,
						"regions":
						{
						},
						"selection":
						[
							[
								1416,
								1416
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/R-Box/syntax/Rcpp.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "TEST/5band1111_3D/input.dat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1858,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 243.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "bilayer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3329,
						"regions":
						{
						},
						"selection":
						[
							[
								112,
								112
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 30.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "SrRuO.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2301,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								2301
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "KFe2Se2.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7701,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								7701
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "FourOrbital.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2246,
						"regions":
						{
						},
						"selection":
						[
							[
								1263,
								1263
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 397.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "4Orbital.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2268,
						"regions":
						{
						},
						"selection":
						[
							[
								1002,
								1002
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 360.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "BaFeAs_5orb.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7206,
						"regions":
						{
						},
						"selection":
						[
							[
								1013,
								1013
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 292.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "ferminator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30979,
						"regions":
						{
						},
						"selection":
						[
							[
								2731,
								2731
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "c++",
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1230.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "chi0.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23384,
						"regions":
						{
						},
						"selection":
						[
							[
								9475,
								9475
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "c++",
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "pairing.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21870,
						"regions":
						{
						},
						"selection":
						[
							[
								17903,
								17903
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "c++",
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8002.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "susInt.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2372,
						"regions":
						{
						},
						"selection":
						[
							[
								385,
								385
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountShouldRun": true,
							"WordCountSyntax": "c++",
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 40.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "CrystalHarmonics2D.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16836,
						"regions":
						{
						},
						"selection":
						[
							[
								1732,
								1732
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"WordCountSyntax": "c++",
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 352.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 19,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7935,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										145,
										153
									],
									[
										478,
										486
									],
									[
										851,
										859
									],
									[
										1004,
										1012
									],
									[
										1040,
										1048
									],
									[
										1161,
										1169
									],
									[
										1402,
										1410
									],
									[
										1584,
										1592
									],
									[
										1611,
										1619
									],
									[
										1638,
										1646
									],
									[
										1676,
										1684
									],
									[
										1703,
										1711
									],
									[
										1730,
										1738
									],
									[
										1773,
										1781
									],
									[
										1822,
										1830
									],
									[
										1989,
										1997
									],
									[
										2270,
										2278
									],
									[
										2315,
										2323
									],
									[
										2544,
										2552
									],
									[
										2675,
										2683
									],
									[
										2725,
										2733
									],
									[
										2775,
										2783
									],
									[
										3059,
										3067
									],
									[
										3087,
										3095
									],
									[
										3115,
										3123
									],
									[
										3299,
										3307
									],
									[
										3327,
										3335
									],
									[
										3355,
										3363
									],
									[
										3505,
										3513
									],
									[
										3575,
										3583
									],
									[
										3610,
										3618
									],
									[
										3645,
										3653
									],
									[
										3877,
										3885
									],
									[
										3921,
										3929
									],
									[
										4227,
										4235
									],
									[
										4263,
										4271
									],
									[
										4299,
										4307
									],
									[
										4336,
										4344
									],
									[
										4612,
										4620
									],
									[
										4879,
										4891
									],
									[
										5374,
										5382
									],
									[
										5494,
										5502
									],
									[
										5792,
										5800
									],
									[
										5838,
										5846
									],
									[
										6173,
										6181
									],
									[
										6197,
										6205
									],
									[
										6478,
										6486
									],
									[
										6746,
										6754
									],
									[
										6860,
										6868
									],
									[
										6992,
										7000
									],
									[
										7140,
										7148
									],
									[
										7353,
										7361
									],
									[
										7665,
										7673
									],
									[
										7867,
										7875
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								6645,
								6645
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"default_dir": "/Users/t7m/Dropbox/GIT_CODE/MRPAPP",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2805.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 467.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 106.0
	},
	"output.unsaved_changes":
	{
		"height": 106.0
	},
	"pinned_build_system": "",
	"project": "MRPA_GIT.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"gaps3D.h"
			],
			[
				"cr",
				"CrystalHarmonics2D.h"
			],
			[
				"gaps",
				"gaps3D.h"
			],
			[
				"inpu",
				"TEST/5band1111_3D/input.dat"
			],
			[
				"main",
				"main.cpp"
			],
			[
				"para",
				"parameters.h"
			],
			[
				"suscept",
				"susceptibility.h"
			],
			[
				"chi0",
				"chi0.h"
			],
			[
				"gap",
				"gaps3D.h"
			],
			[
				"fermin",
				"ferminator.h"
			],
			[
				"fou",
				"FourOrbital.h"
			],
			[
				"mak",
				"Makefile"
			],
			[
				"bands",
				"bandstructure.h"
			],
			[
				"four",
				"FourOrbital.h"
			],
			[
				"make",
				"Makefile"
			],
			[
				"kfe",
				"KFe2Se2.h"
			],
			[
				"susce",
				"susceptibility.h"
			],
			[
				"momen",
				"momentumDomain.h"
			],
			[
				"chi",
				"chi0.h"
			],
			[
				"baf",
				"BaFeAs_5orb.h"
			],
			[
				"band",
				"bandstructure.h"
			],
			[
				"sr",
				"SrRuO.h"
			],
			[
				"bila",
				"bilayer.h"
			],
			[
				"moment",
				"momentumDomain.h"
			],
			[
				"crys",
				"CrystalHarmonics2D.h"
			],
			[
				"bafe",
				"BaFeAs_5orb.h"
			],
			[
				"gaps3",
				"gaps3D.h"
			],
			[
				"crysta",
				"CrystalHarmonics2D.h"
			],
			[
				"param",
				"parameters.h"
			],
			[
				"pairing",
				"pairing.h"
			],
			[
				"susceptib",
				"susceptibility.h"
			],
			[
				"susin",
				"susInt.h"
			],
			[
				"trian",
				"src/Input/Models/TriangularLatticeModel.h"
			],
			[
				"write",
				"comp_library/IO_library/HDF5/HDF5_writer.h"
			],
			[
				"crystal",
				"CrystalHarmonics.h"
			],
			[
				"sucep",
				"susceptibility.h"
			],
			[
				"gaps2",
				"gaps2D.h"
			],
			[
				"suscep",
				"susceptibility.h"
			],
			[
				"symmetr",
				"phys_library/DCA+_step/symmetrization/symmetrize_single_particle_function.h"
			],
			[
				"symm",
				"phys_library/DCA+_step/symmetrization/symmetrize.h"
			],
			[
				"coarse",
				"phys_library/DCA+_step/cluster_mapping/coarsegraining_step/coarsegraining_sp.h"
			],
			[
				"coar",
				"phys_library/DCA+_step/cluster_mapping/coarsegraining_step/coarsegraining_sp.h"
			],
			[
				"exclus",
				"phys_library/DCA+_step/cluster_mapping/cluster_exclusion_step.h"
			],
			[
				"cluster",
				"phys_library/DCA+_step/cluster_mapping/cluster_exclusion_step.h"
			],
			[
				"dca+",
				"phys_library/DCA+_loop/DCA+_loop.h"
			],
			[
				"bse",
				"src/phys_library/DCA+_analysis/BSE_solver/BSE_cluster_solver.h"
			],
			[
				"dcaloo",
				"src/phys_library/DCA+_loop/DCA+_loop.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 566.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 222.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
